/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hernandezvicente.daniel.view;

import edu.hernandezvicente.daniel.controller.Controller;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;

/**
 *
 * @author daniel
 */
public class Calc extends javax.swing.JFrame {
    private final Action decimalAction, hexadecimalAction, octalAction, binaryAction;   //definitios of conversion menu
    private Display display = null;         //add a display to frame.panel
    private keyboardStatus keyboardStatus;  //main status save
    private decimalKeyboardStatus decimalKeyboardStatus;        ///////////////////////////////////
    private octalKeyboardStatus octalKeyboardStatus;                     //set diferent status //
    private hexadecimalKeyboardSatus hexadecimalKeyboardSatus;  
    private binaryKeyboardStatus binaryKeyboardStatus;          //////////////////////////////////////
    private Controller ctrl;                        //controller to tis view
    private Controller.KeyboardAction actionNumeric;  //Event to control the numeric keyboard
    /**
     * Creates new form calc
     */
    public Calc(Controller ctrl) {
        initComponents();
        this.ctrl = ctrl;
        actionNumeric = ctrl.new KeyboardAction();
        
        decimalKeyboardStatus = new decimalKeyboardStatus();
        octalKeyboardStatus = new octalKeyboardStatus();
        hexadecimalKeyboardSatus = new hexadecimalKeyboardSatus();
        binaryKeyboardStatus = new binaryKeyboardStatus();
        
        display = new Display();   //create new display  
        screenPanel.add(display);  //add display to frame
        screenPanel.revalidate();
        screenPanel.repaint();
        
        rButtonDecimal.setSelected(true);  //predefined decimal conversion when the view start
        setDecimal();                      // decimal status by default
        
        
        //set acction to radiobutton decimal:
        decimalAction = new AbstractAction("Decimal") {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                ctrl.decimalConversion();
            }
        };
        
        //set acction to radiobutton hexadecimal:
        hexadecimalAction = new AbstractAction("Hexadecimal") {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                ctrl.hexadecimalConversion();
                
            }
        };
        
        //set acction to radiobutton octal:
        octalAction = new AbstractAction("Octal") {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                ctrl.octalConversion();
            }
        };
        
        //set acction to radiobutton binary:
        binaryAction = new AbstractAction("binario") {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                ctrl.binaryConversion();
            }
        };
        
        //add overhead actions to their buttons:
        rButtonDecimal.setAction(decimalAction);
        rButtonHexadecimal.setAction(hexadecimalAction);
        rButtonOctal.setAction(octalAction);
        rButtonBinary.setAction(binaryAction);
        //add overhead actions to their menu options
        menuDecimal.setAction(decimalAction);
        menuHexadecimal.setAction(hexadecimalAction);
        menuOctal.setAction(octalAction);
        menuBinary.setAction(binaryAction);
        
        //add action to keyboard
        button0.addActionListener(actionNumeric);
        button1.addActionListener(actionNumeric);
        button2.addActionListener(actionNumeric);
        button3.addActionListener(actionNumeric);
        button4.addActionListener(actionNumeric);
        button5.addActionListener(actionNumeric);
        button6.addActionListener(actionNumeric);
        button7.addActionListener(actionNumeric);
        button8.addActionListener(actionNumeric);
        button9.addActionListener(actionNumeric);
        buttonA.addActionListener(actionNumeric);
        buttonB.addActionListener(actionNumeric);
        buttonC.addActionListener(actionNumeric);
        buttonD.addActionListener(actionNumeric);
        buttonE.addActionListener(actionNumeric);
        buttonF.addActionListener(actionNumeric);
        //Add reset action to C button:
        buttonCe.addActionListener(ctrl.new ResetAction());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        menuGroup = new javax.swing.ButtonGroup();
        numberKeyBoardPanel = new javax.swing.JPanel();
        button7 = new javax.swing.JButton();
        button8 = new javax.swing.JButton();
        button9 = new javax.swing.JButton();
        button4 = new javax.swing.JButton();
        button5 = new javax.swing.JButton();
        button6 = new javax.swing.JButton();
        button1 = new javax.swing.JButton();
        button2 = new javax.swing.JButton();
        button3 = new javax.swing.JButton();
        button0 = new javax.swing.JButton();
        buttonCe = new javax.swing.JButton();
        menuPanel = new javax.swing.JPanel();
        rButtonDecimal = new javax.swing.JRadioButton();
        rButtonHexadecimal = new javax.swing.JRadioButton();
        rButtonOctal = new javax.swing.JRadioButton();
        rButtonBinary = new javax.swing.JRadioButton();
        wordsKeyboardPanel = new javax.swing.JPanel();
        buttonA = new javax.swing.JButton();
        buttonB = new javax.swing.JButton();
        buttonC = new javax.swing.JButton();
        buttonD = new javax.swing.JButton();
        buttonE = new javax.swing.JButton();
        buttonF = new javax.swing.JButton();
        screenPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        menuDecimal = new javax.swing.JMenuItem();
        menuHexadecimal = new javax.swing.JMenuItem();
        menuOctal = new javax.swing.JMenuItem();
        menuBinary = new javax.swing.JMenuItem();

        menuGroup.add(rButtonDecimal);
        menuGroup.add(rButtonHexadecimal);
        menuGroup.add(rButtonBinary);
        menuGroup.add(rButtonOctal);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 153, 255));
        setResizable(false);

        numberKeyBoardPanel.setLayout(new java.awt.GridBagLayout());

        button7.setText("7");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button7, gridBagConstraints);

        button8.setText("8");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button8, gridBagConstraints);

        button9.setText("9");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button9, gridBagConstraints);

        button4.setText("4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button4, gridBagConstraints);

        button5.setText("5");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button5, gridBagConstraints);

        button6.setText("6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button6, gridBagConstraints);

        button1.setText("1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button1, gridBagConstraints);

        button2.setText("2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button2, gridBagConstraints);

        button3.setText("3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button3, gridBagConstraints);

        button0.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(button0, gridBagConstraints);

        buttonCe.setText("C");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 42;
        gridBagConstraints.ipady = 54;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        numberKeyBoardPanel.add(buttonCe, gridBagConstraints);

        menuPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Opciones"));

        rButtonDecimal.setText("Decimal");

        rButtonHexadecimal.setText("Hexadecimal");

        rButtonOctal.setText("Octal");

        rButtonBinary.setText("Binario");

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rButtonHexadecimal)
                    .addComponent(rButtonOctal)
                    .addComponent(rButtonBinary)
                    .addComponent(rButtonDecimal))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rButtonDecimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rButtonHexadecimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rButtonOctal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rButtonBinary))
        );

        wordsKeyboardPanel.setLayout(new java.awt.GridBagLayout());

        buttonA.setText("A");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        wordsKeyboardPanel.add(buttonA, gridBagConstraints);

        buttonB.setText("B");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        wordsKeyboardPanel.add(buttonB, gridBagConstraints);

        buttonC.setText("C");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        wordsKeyboardPanel.add(buttonC, gridBagConstraints);

        buttonD.setText("D");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        wordsKeyboardPanel.add(buttonD, gridBagConstraints);

        buttonE.setText("E");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        wordsKeyboardPanel.add(buttonE, gridBagConstraints);

        buttonF.setText("F");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.ipady = 33;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        wordsKeyboardPanel.add(buttonF, gridBagConstraints);

        screenPanel.setLayout(new java.awt.GridLayout(1, 0));

        jMenu3.setText("acciones");

        menuDecimal.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, 0));
        menuDecimal.setMnemonic('d');
        menuDecimal.setText("Decimal");
        jMenu3.add(menuDecimal);

        menuHexadecimal.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, 0));
        menuHexadecimal.setMnemonic('h');
        menuHexadecimal.setText("Hexadecimal");
        jMenu3.add(menuHexadecimal);

        menuOctal.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, 0));
        menuOctal.setMnemonic('o');
        menuOctal.setText("Octal");
        jMenu3.add(menuOctal);

        menuBinary.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, 0));
        menuBinary.setMnemonic('b');
        menuBinary.setText("Binario");
        jMenu3.add(menuBinary);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(screenPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(numberKeyBoardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wordsKeyboardPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(screenPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wordsKeyboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(numberKeyBoardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * set decimal status to view:
     */
    public void setDecimal(){
        rButtonDecimal.setSelected(true);
        keyboardStatus = decimalKeyboardStatus;
        keyboardStatus.handle();
    }
    
    /**
     * set hexadecimal status to view:
     */
    public void setHexadecimal(){
        rButtonHexadecimal.setSelected(true);
        keyboardStatus = hexadecimalKeyboardSatus;
        keyboardStatus.handle();
    }
    
    /**
     * set octal status to view:
     */
    public void setOctal(){
        rButtonOctal.setSelected(true);
        keyboardStatus = octalKeyboardStatus;
        keyboardStatus.handle();
    }
    
    /**
     * set binary status to view:
     */
    public void setBinary(){
       rButtonBinary.setSelected(true);
       keyboardStatus = binaryKeyboardStatus;
       keyboardStatus.handle();
    }
   
    /**
     * Reset this calc view:
     */
    public void reset(){
        display.setZero();
    }
   
   /**
    * method to get the string value of the actual status:
    * @return "decimal" , "hexadecimal", "octal", "binary" 
    */
    public String getStatusValue(){
       return this.keyboardStatus.toString();
    }
   
   /**
    * mehtod to get actual display value
    * @return actual value of the calc display 
    */
    public String getDisplayValue(){
       return display.getText();
    }
   
    /**
     * show conversion result in to display:
     * @param conversion result
     */
    public void setResult(String value){
       display.setText(value);
   } 
   
    public void setDisplayValue(String value){
       if(display.isEmpty() && display.getText().equals("0")){
           display.setText(value);
       }
       else{
           display.setText(display.getText() + value);
           display.setfilling();
       }
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button0;
    private javax.swing.JButton button1;
    private javax.swing.JButton button2;
    private javax.swing.JButton button3;
    private javax.swing.JButton button4;
    private javax.swing.JButton button5;
    private javax.swing.JButton button6;
    private javax.swing.JButton button7;
    private javax.swing.JButton button8;
    private javax.swing.JButton button9;
    private javax.swing.JButton buttonA;
    private javax.swing.JButton buttonB;
    private javax.swing.JButton buttonC;
    private javax.swing.JButton buttonCe;
    private javax.swing.JButton buttonD;
    private javax.swing.JButton buttonE;
    private javax.swing.JButton buttonF;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem menuBinary;
    private javax.swing.JMenuItem menuDecimal;
    private javax.swing.ButtonGroup menuGroup;
    private javax.swing.JMenuItem menuHexadecimal;
    private javax.swing.JMenuItem menuOctal;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel numberKeyBoardPanel;
    private javax.swing.JRadioButton rButtonBinary;
    private javax.swing.JRadioButton rButtonDecimal;
    private javax.swing.JRadioButton rButtonHexadecimal;
    private javax.swing.JRadioButton rButtonOctal;
    private javax.swing.JPanel screenPanel;
    private javax.swing.JPanel wordsKeyboardPanel;
    // End of variables declaration//GEN-END:variables

    //Class used to define the diferent keyobard status
    abstract class keyboardStatus{
        abstract void handle();
    }
    
    //status to set avaiable buttons [0-9]
    class decimalKeyboardStatus extends keyboardStatus{

        @Override
        void handle() {
            button0.setEnabled(true);
            button1.setEnabled(true);
            button2.setEnabled(true);
            button3.setEnabled(true);
            button4.setEnabled(true);
            button5.setEnabled(true);
            button6.setEnabled(true);
            button7.setEnabled(true);
            button8.setEnabled(true);
            button9.setEnabled(true);
            buttonA.setEnabled(false);
            buttonB.setEnabled(false);
            buttonC.setEnabled(false);
            buttonD.setEnabled(false);
            buttonE.setEnabled(false);
            buttonF.setEnabled(false);
        }
        //define the string value of this status:    
        @Override
        public String toString() {
            return "decimal"; 
        }
                
    }
    //status to set avaiable buttons [0-F]
    class hexadecimalKeyboardSatus extends keyboardStatus{

        @Override
        void handle() {
            button0.setEnabled(true);
            button1.setEnabled(true);
            button2.setEnabled(true);
            button3.setEnabled(true);
            button4.setEnabled(true);
            button5.setEnabled(true);
            button6.setEnabled(true);
            button7.setEnabled(true);
            button8.setEnabled(true);
            button9.setEnabled(true);
            buttonA.setEnabled(true);
            buttonB.setEnabled(true);
            buttonC.setEnabled(true);
            buttonD.setEnabled(true);
            buttonE.setEnabled(true);
            buttonF.setEnabled(true);
        }
        //define the string value of this status:
        @Override
        public String toString() {
            return "hexadecimal"; 
        }
    }
    //status to set avaiable buttons [0-7]
    class octalKeyboardStatus extends keyboardStatus{

        @Override
        void handle() {
            button0.setEnabled(true);
            button1.setEnabled(true);
            button2.setEnabled(true);
            button3.setEnabled(true);
            button4.setEnabled(true);
            button5.setEnabled(true);
            button6.setEnabled(true);
            button7.setEnabled(true);
            button8.setEnabled(false);
            button9.setEnabled(false);
            buttonA.setEnabled(false);
            buttonB.setEnabled(false);
            buttonC.setEnabled(false);
            buttonD.setEnabled(false);
            buttonE.setEnabled(false);
            buttonF.setEnabled(false);
        }
        //define the string value of this status:
        @Override
        public String toString() {
            return "octal"; 
        }
    }
    //status to set avaiable buttons [0-1]
    class binaryKeyboardStatus extends keyboardStatus{

        @Override
        void handle() {
            button0.setEnabled(true);
            button1.setEnabled(true);
            button2.setEnabled(false);
            button3.setEnabled(false);
            button4.setEnabled(false);
            button5.setEnabled(false);
            button6.setEnabled(false);
            button7.setEnabled(false);
            button8.setEnabled(false);
            button9.setEnabled(false);
            buttonA.setEnabled(false);
            buttonB.setEnabled(false);
            buttonC.setEnabled(false);
            buttonD.setEnabled(false);
            buttonE.setEnabled(false);
            buttonF.setEnabled(false);
        }
        //define the string value of this status:
        @Override
        public String toString() {
            return "binary"; 
        }
    }
}